library(fpp2)
library(forecast)
advert <- advert
advert
# Grafico con función autoplot()
autoplot(advert) +
ggtitle("Annual female murder rate (per 100,000 standard population) in the USA. 1950-2004") +
xlab("Year") +
ylab("Female murder rate (per 100,000 standard population)")
?advert
View(advert)
# Grafico con función autoplot()
autoplot(advert) +
ggtitle("Monthly sales and advertising expenditure for an automotive parts company.") +
xlab("Month")
# Grafico con función autoplot()
autoplot(advert) +
ggtitle("Monthly sales and advertising expenditure for an automotive parts company.") +
xlab("Month") +
ylab("")
?autoplot
# Grafico con función autoplot()
autoplot(advert, facets = TRUE) +
ggtitle("Monthly sales and advertising expenditure for an automotive parts company.") +
xlab("Month") +
ylab("")
# Regresión lineal múltiple en datos ts
fit.advert <- tslm(sales ~
advert,
data = advert)
summary(fit.advert)
# Gráfica de los residuales
fit.advert %>% gg_tsresiduals()
# Gráfica de los residuales
fit.advert %>% checkresiduals()
advert_dreg.0.0.0 <- Arima(
advert[, "sales"], xreg = advert[, "advert"],
order = c(0, 0, 0))
advert_dreg.0.0.0
# Gráfica de los residuales
advert_dreg.0.0.0 %>% checkresiduals()
advert_dreg.auto <-
auto.arima(advert)
rep(26,14)
library(fpp2)
library(forecast)
advert <- advert
# Grafico con función autoplot()
autoplot(advert) +
ggtitle("Monthly sales and advertising expenditure for an automotive parts company.") +
xlab("Month") +
ylab("")
# Grafico con función autoplot()
autoplot(advert, facets = TRUE) +
ggtitle("Monthly sales and advertising expenditure for an automotive parts company.") +
xlab("Month") +
ylab("")
# Grafico con función autoplot()
autoplot(advert) +
ggtitle("Monthly sales and advertising expenditure for an automotive parts company.") +
xlab("Month") +
ylab("")
# Grafico con función autoplot()
autoplot(advert, facets = TRUE) +
ggtitle("Monthly sales and advertising expenditure for an automotive parts company.") +
xlab("Month") +
ylab("")
# Regresión lineal múltiple en datos ts
fit.advert <-
tslm(sales ~
advert,
data = advert)
summary(fit.advert)
plot(fit.advert)
autoplot(fit.advert)
# Regresión lineal múltiple en datos ts
fit.advert <-
tslm(sales ~
advert,
data = advert)
summary(fit.advert)
autoplot(advert[,"sales"], series = "Data") +
autolayer(fitted(fit.advert), series = "Fitted") +
xlab("Month") +
ylab("") +
ggtitle("Total electricity demand in GW for Victoria, Australia, every day during 2014") +
guides(colour = guide_legend(title = ""))
# Regresión lineal múltiple en datos ts
fit.advert <-
tslm(sales ~
advert,
data = advert)
summary(fit.advert)
autoplot(advert[,"sales"], series = "Data") +
autolayer(fitted(fit.advert), series = "Fitted") +
xlab("Month") +
ylab("") +
ggtitle("Monthly sales and advertising expenditure for an automotive parts company.") +
guides(colour = guide_legend(title = ""))
library(ggplot2)
ggplot(advert,
aes(x = advert, y = sales)) +
geom_point() +
geom_abline()
ggplot(advert,
aes(x = advert, y = sales)) +
geom_point()
advert
advert %>%
as.data.frame() %>%
ggplot(aes(x = advert, y = sales)) +
geom_point()
View(advert)
?geom_smooth
advert %>%
as.data.frame() %>%
ggplot(aes(x = advert, y = sales)) +
geom_point() +
geom_smooth(method = "lm",
se = TRUE)
# Regresión lineal múltiple en datos ts
fit.advert <-
tslm(sales ~
advert,
data = advert)
summary(fit.advert)
advert %>%
as.data.frame() %>%
ggplot(aes(x = advert, y = sales)) +
geom_point() +
geom_smooth(method = "lm",
se = FALSE)
autoplot(advert[,"sales"], series = "Data") +
autolayer(fitted(fit.advert), series = "Fitted") +
xlab("Month") +
ylab("") +
ggtitle("Monthly sales and advertising expenditure for an automotive parts company.") +
guides(colour = guide_legend(title = ""))
# Gráfica de los residuales
fit.advert %>% checkresiduals()
advert_dreg.0.0.0 <-
Arima(advert[, "sales"],
xreg = advert[, "advert"],
order = c(0, 0, 0))
advert_dreg.0.0.0
# Gráfica de los residuales
advert_dreg.0.0.0 %>% checkresiduals()
advert_dreg.auto <-
auto.arima(advert,
xreg = advert[, "advert"])
advert_dreg.auto <-
auto.arima(advert[, "sales"],
xreg = advert[, "advert"])
advert_dreg.auto
checkresiduals(advert_dreg.auto)
advert_dreg.auto <-
auto.arima(advert[, "sales"],
xreg = advert[, "advert"])
advert_dreg.auto
checkresiduals(advert_dreg.auto)
accuracy(fit.advert)
accuracy(fit.advert)
accuracy(advert_dreg.0.0.0)
accuracy(advert_dreg.auto)
?arima
advert_dreg.0.0.0[aic]
AICc(advert_dreg.0.0.0)
?AICc
View(advert_dreg.0.0.0)
advert_dreg.0.0.0
advert_dreg.0.0.0[,aicc]
advert_dreg.0.0.0[aicc]
advert_dreg.auto$aicc
advert_dreg.0.0.0$aic
attributes(advert_dreg.auto)
advert_dreg.0.0.0[15]
accuracy(advert_dreg.0.0.0)$MASE
attributes(accuracy(advert_dreg.auto))
accuracy(advert_dreg.0.0.0)$dimnames[[2]]
accuracy(advert_dreg.0.0.0)[[2]]
accuracy(advert_dreg.0.0.0)
accuracy(advert_dreg.auto)
accuracy(advert_dreg.0.0.0)[[1]]
accuracy(advert_dreg.0.0.0)[[6]]
accuracy(advert_dreg.0.0.0)$dimnames
accuracy(advert_dreg.0.0.0)[,"MASE"]
accuracy(advert_dreg.0.0.0)[,"MASE"]
accuracy(advert_dreg.auto)[,"MASE"]
advert_dreg.0.0.0$aicc
advert_dreg.auto$aicc
accuracy(advert_dreg.0.0.0)[,"MASE"]
accuracy(advert_dreg.auto)[,"MASE"]
advert_dreg.0.0.0$aic
advert_dreg.auto$aic
library(fpp2)
library(forecast)
library(ggplot2)
advert <- advert
# Grafico con función autoplot()
autoplot(advert) +
ggtitle("Monthly sales and advertising expenditure for an automotive parts company.") +
xlab("Month") +
ylab("")
# Grafico con función autoplot()
autoplot(advert, facets = TRUE) +
ggtitle("Monthly sales and advertising expenditure for an automotive parts company.") +
xlab("Month") +
ylab("")
# Regresión lineal múltiple en datos ts
fit.advert <-
tslm(sales ~
advert,
data = advert)
summary(fit.advert)
advert %>%
as.data.frame() %>%
ggplot(aes(x = advert, y = sales)) +
geom_point() +
geom_smooth(method = "lm",
se = FALSE)
autoplot(advert[,"sales"], series = "Data") +
autolayer(fitted(fit.advert), series = "Fitted") +
xlab("Month") +
ylab("") +
ggtitle("Monthly sales and advertising expenditure for an automotive parts company.") +
guides(colour = guide_legend(title = ""))
# Gráfica de los residuales
fit.advert %>% checkresiduals()
advert_dreg.0.0.0 <-
Arima(advert[, "sales"],
xreg = advert[, "advert"],
order = c(0, 0, 0))
advert_dreg.0.0.0
# Gráfica de los residuales
advert_dreg.0.0.0 %>% checkresiduals()
advert_dreg.auto <-
auto.arima(advert[, "sales"],
xreg = advert[, "advert"])
advert_dreg.auto
checkresiduals(advert_dreg.auto)
advert_dreg.0.0.0$aicc
advert_dreg.auto$aicc
accuracy(advert_dreg.0.0.0)[,"MASE"]
accuracy(advert_dreg.auto)[,"MASE"]
advert_fcast <-
forecast(advert_dreg.auto,
xreg = rep(10,6))
advert_fcast <-
forecast(advert_dreg.auto,
xreg = rep(10,6))
autoplot(advert_fcast) +
ylab("Demande de electricidad")
advert_fcast
advert_fcast <-
forecast(advert_dreg.auto,
xreg = rep(10,6))
advert_fcast
autoplot(advert_fcast) +
ggtitle("Monthly sales and forecast for an automotive parts company.")
advert_fcast <-
forecast(advert_dreg.auto,
xreg = rep(10,6))
advert_fcast
autoplot(advert_fcast) +
ggtitle("Monthly sales and forecast for an automotive parts company.") +
xlab("Month") +
ylab("Sales [USD]")
install.packages("markdown")
advert_dreg.2.1.2 <- Arima(
advert[, "sales"], xreg = advert[, "advert"],
order = c(2, 1, 2))
advert_fcast <-
forecast(advert_dreg.2.1.2,
xreg = rep(10,6))
advert_fcast
autoplot(advert_fcast) +
ggtitle("Monthly sales and forecast for an automotive parts company.") +
xlab("Month") +
ylab("Sales [USD]")
advert_fcast <-
forecast(advert_dreg.auto,
xreg = rep(10,6))
advert_fcast
autoplot(advert_fcast) +
ggtitle("Monthly sales and forecast for an automotive parts company.") +
xlab("Month") +
ylab("Sales [USD]")
autoplot(advert_fcast) +
ggtitle("Monthly sales and forecast for an automotive parts company.") +
xlab("Month") +
ylab("Sales [USD]")
rm(advert_dreg.2.1.2)
library(fpp2)
library(forecast)
library(ggplot2)
advert <- advert
# Grafico con función autoplot()
autoplot(advert) +
ggtitle("Monthly sales and advertising expenditure for an automotive parts company.") +
xlab("Month") +
ylab("")
# Grafico con función autoplot()
autoplot(advert, facets = TRUE) +
ggtitle("Monthly sales and advertising expenditure for an automotive parts company.") +
xlab("Month") +
ylab("")
# Regresión lineal múltiple en datos ts
fit.advert <-
tslm(sales ~
advert,
data = advert)
summary(fit.advert)
advert %>%
as.data.frame() %>%
ggplot(aes(x = advert, y = sales)) +
geom_point() +
geom_smooth(method = "lm",
se = FALSE)
autoplot(advert[,"sales"], series = "Data") +
autolayer(fitted(fit.advert), series = "Fitted") +
xlab("Month") +
ylab("") +
ggtitle("Monthly sales and advertising expenditure for an automotive parts company.") +
guides(colour = guide_legend(title = ""))
# Gráfica de los residuales
fit.advert %>% checkresiduals()
advert_dreg.0.0.0 <-
Arima(advert[, "sales"],
xreg = advert[, "advert"],
order = c(0, 0, 0))
advert_dreg.0.0.0
# Gráfica de los residuales
advert_dreg.0.0.0 %>% checkresiduals()
advert_dreg.auto <-
auto.arima(advert[, "sales"],
xreg = advert[, "advert"])
advert_dreg.auto
checkresiduals(advert_dreg.auto)
advert_dreg.0.0.0$aicc
advert_dreg.auto$aicc
accuracy(advert_dreg.0.0.0)[,"MASE"]
accuracy(advert_dreg.auto)[,"MASE"]
advert_fcast <-
forecast(advert_dreg.auto,
xreg = rep(10,6))
advert_fcast
autoplot(advert_fcast) +
ggtitle("Monthly sales and forecast for an automotive parts company.") +
xlab("Month") +
ylab("Sales [USD]")
# Realizamos modelo de regresión lineal múltiple en datos ts y lo almacenamos en fit.advert
fit.advert <-
tslm(sales ~
advert,
data = advert)
# Desplegamos resultados del modelo
summary(fit.advert)
# Graficamos
advert %>%
as.data.frame() %>%
ggplot(aes(x = advert, y = sales)) +
geom_point() +
geom_smooth(method = "lm",
se = FALSE)
autoplot(advert[,"sales"], series = "Data") +
autolayer(fitted(fit.advert), series = "Fitted") +
xlab("Month") +
ylab("") +
ggtitle("Monthly sales and advertising expenditure for an automotive parts company.") +
guides(colour = guide_legend(title = ""))
?accuracy
accuracy(advert_dreg.0.0.0)
accuracy(advert_dreg.auto)
# Generamos el pronóstico para 6 periodos, considerando que el gasto en publicidad será de 10 para todos estos.
advert_fcast <-
forecast(advert_dreg.auto,
xreg = rep(10,6))
#
advert_fcast
autoplot(advert_fcast) +
ggtitle("Monthly sales and forecast for an automotive parts company.") +
xlab("Month") +
ylab("Sales [USD]")
