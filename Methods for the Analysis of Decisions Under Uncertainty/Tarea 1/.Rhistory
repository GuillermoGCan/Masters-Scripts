# Normalizing the covariates
## Política 1
Delta.temp.P1_3.1$Beta.Delta.Temp.Z <-
as.numeric(scale(Delta.temp.P1_3.1$Beta.Delta.Temp,center=TRUE,scale=TRUE))
Delta.temp.P1_3.1$Delta.S.Z <-
as.numeric(scale(Delta.temp.P1_3.1$Delta.S,center=TRUE,scale=TRUE))
Delta.temp.P1_3.1$Gamma.re.Z <-
as.numeric(scale(Delta.temp.P1_3.1$Gamma.re,center=TRUE,scale=TRUE))
Delta.temp.P1_3.1$Eta.re.Z <-
as.numeric(scale(Delta.temp.P1_3.1$Eta.re,center=TRUE,scale=TRUE))
## Política 2
Delta.temp.P2_3.1$Beta.Delta.Temp.Z <-
as.numeric(scale(Delta.temp.P2_3.1$Beta.Delta.Temp,center=TRUE,scale=TRUE))
Delta.temp.P2_3.1$Delta.S.Z <-
as.numeric(scale(Delta.temp.P2_3.1$Delta.S,center=TRUE,scale=TRUE))
Delta.temp.P2_3.1$Gamma.re.Z <-
as.numeric(scale(Delta.temp.P2_3.1$Gamma.re,center=TRUE,scale=TRUE))
Delta.temp.P2_3.1$Eta.re.Z <-
as.numeric(scale(Delta.temp.P2_3.1$Eta.re,center=TRUE,scale=TRUE))
#create the meta-model for temperature using normalized covariates
## Política 1
meta.model.temp.P1_3.1 <-
lm(Delta.Temp ~
Beta.Delta.Temp.Z + Delta.S.Z + Gamma.re.Z + Eta.re.Z,
data = Delta.temp.P1_3.1)
summary(meta.model.temp.P1_3.1)
## Política 2
meta.model.temp.P2_3.1 <-
lm(Delta.Temp ~
Beta.Delta.Temp.Z + Delta.S.Z + Gamma.re.Z + Eta.re.Z,
data = Delta.temp.P2_3.1)
summary(meta.model.temp.P2_3.1)
# Matriz de respuestas promedio
mat_importancia_3.4 <-
matrix(nrow = 8,
ncol = 6)
# Establezco la política que se aplica en la matriz
for (i in 1:4){
mat_importancia_3.4[i,1] <- "Política 1"
}
for (i in 5:8){
mat_importancia_3.4[i,1] <- "Política 2"
}
# Establezco los puntos de diseño en la matriz
for(i in c(1,5)){
mat_importancia_3.4[i,2] <- "Eta.re_factor = 0, Gamma.re_factor = 0"
}
for(i in c(2,6)){
mat_importancia_3.4[i,2] <- "Eta.re_factor = 1, Gamma.re_factor = 0"
}
for(i in c(3,7)){
mat_importancia_3.4[i,2] <- "Eta.re_factor = 0, Gamma.re_factor = 1"
}
for(i in c(4,8)){
mat_importancia_3.4[i,2] <- "Eta.re_factor = 1, Gamma.re_factor = 1"
}
mat_importancia_3.4
# Matriz de respuestas promedio
mat_importancia_3.4 <-
matrix(nrow = 3,
ncol = 5)
# Matriz de respuestas promedio
mat_importancia_3.4 <-
matrix(nrow = 3,
ncol = 5)
# Establezco la política que se aplica en la matriz
mat_importancia_3.4[1,1] <- "Política 1"
mat_importancia_3.4[2,1] <- "Política 2"
mat_importancia_3.4
# Matriz de respuestas promedio
mat_importancia_3.4 <-
matrix(nrow = 2,
ncol = 5)
# Establezco la política que se aplica en la matriz
mat_importancia_3.4[1,1] <- "Política 1"
mat_importancia_3.4[2,1] <- "Política 2"
mat_importancia_3.4
for (i in 2:5){
mat_promedios_2.2[1,i] <-
round(meta.model.temp.P1_3.1$coeff[i],4)
}
mat_importancia_3.4
meta.model.temp.P1_3.1$coeff[2]
class(meta.model.temp.P1_3.1$coeff[2])
for (i in 2:5){
mat_importancia_3.4[1,i] <-
round(meta.model.temp.P1_3.1$coeff[i],4)
}
mat_importancia_3.4
for (i in 2:5){
mat_importancia_3.4[2,i] <-
round(meta.model.temp.P2_3.1$coeff[i],4)
}
mat_importancia_3.4
rm(mat_promedios_2.2)
summary(meta.model.temp.P1_3.1)
# Matriz de respuestas promedio
mat_importancia_temp_3.4 <-
matrix(nrow = 2,
ncol = 5)
# Establezco la política que se aplica en la matriz
mat_importancia_temp_3.4[1,1] <- "Política 1"
mat_importancia_temp_3.4[2,1] <- "Política 2"
# Crecimiento de temperatura
## Política 1
for (i in 2:5){
mat_importancia_temp_3.4[1,i] <-
round(meta.model.temp.P1_3.1$coeff[i],4)
}
for (i in 2:5){
mat_importancia_temp_3.4[2,i] <-
round(meta.model.temp.P2_3.1$coeff[i],4)
}
kable(mat_importancia_temp_3.4,
align = "c",
col.names =
c("Políticas",
"Coeficiente `Beta.Delta.Temp.Z`",
"Coeficiente `Delta.S.Z`",
"Coeficiente `Gamma.re.Z`",
"Coeficiente `Eta.re.Z`"),
caption = "Tabla comparativa de los Coeficientes de Regresión del Meta-modelo que relaciona el Crecimiento de la Temperatura Promedio con las variables aleatorias estandarizadas `Beta.Delta.Temp`, `Delta.S`, `Gamma.re` y `Eta.re`")
# Matriz de respuestas promedio
mat_importancia_GN_3.4 <-
matrix(nrow = 2,
ncol = 5)
# Establezco la política que se aplica en la matriz
mat_importancia_GN_3.4[1,1] <- "Política 1"
mat_importancia_GN_3.4[2,1] <- "Política 2"
# Crecimiento de temperatura
## Política 1
for (i in 2:5){
mat_importancia_GN_3.4[1,i] <-
round(meta.model.GN.P1_3.1$coeff[i],4)
}
# Matriz de respuestas promedio
mat_importancia_GN_3.4 <-
matrix(nrow = 2,
ncol = 5)
# Establezco la política que se aplica en la matriz
mat_importancia_GN_3.4[1,1] <- "Política 1"
mat_importancia_GN_3.4[2,1] <- "Política 2"
# Crecimiento de temperatura
## Política 1
for (i in 2:5){
mat_importancia_GN_3.4[1,i] <-
round(meta.model.growthN.P1_3.2$coeff[i],4)
}
## Política 2
for (i in 2:5){
mat_importancia_GN_3.4[2,i] <-
round(meta.model.growthN.P2_3.2$coeff[i],4)
}
kable(mat_importancia_GN_3.4,
align = "c",
col.names =
c("Políticas",
"Coeficiente `Beta.Delta.Temp.Z`",
"Coeficiente `Delta.S.Z`",
"Coeficiente `Gamma.re.Z`",
"Coeficiente `Eta.re.Z`"),
caption = "Tabla comparativa de los Coeficientes de Regresión del Meta-modelo que relaciona el Crecimiento Económico de la Región Avanzada con las variables aleatorias estandarizadas `Beta.Delta.Temp`, `Delta.S`, `Gamma.re` y `Eta.re`")
# Matriz de respuestas promedio
mat_importancia_GS_3.4 <-
matrix(nrow = 2,
ncol = 5)
# Establezco la política que se aplica en la matriz
mat_importancia_GS_3.4[1,1] <- "Política 1"
mat_importancia_GS_3.4[2,1] <- "Política 2"
# Crecimiento de temperatura
## Política 1
for (i in 2:5){
mat_importancia_GS_3.4[1,i] <-
round(meta.model.growthS.P1_3.3$coeff[i],4)
}
## Política 2
for (i in 2:5){
mat_importancia_GN_3.4[2,i] <-
round(meta.model.growthS.P2_3.3$coeff[i],4)
}
kable(mat_importancia_GS_3.4,
align = "c",
col.names =
c("Políticas",
"Coeficiente `Beta.Delta.Temp.Z`",
"Coeficiente `Delta.S.Z`",
"Coeficiente `Gamma.re.Z`",
"Coeficiente `Eta.re.Z`"),
caption = "Tabla comparativa de los Coeficientes de Regresión del Meta-modelo que relaciona el Crecimiento Económico de la Región Emergente con las variables aleatorias estandarizadas `Beta.Delta.Temp`, `Delta.S`, `Gamma.re` y `Eta.re`")
meta.model.growthS.P2_3.3
meta.model.growthS.P2_3.3$coefficients
meta.model.growthS.P2_3.3$coefficients[2]
meta.model.growthS.P2_3.3$coeff[2]
meta.model.growthS.P2_3.3$coeff[3]
meta.model.growthS.P2_3.3$coeff[4]
meta.model.growthS.P2_3.3$coeff[5]
# Matriz de respuestas promedio
mat_importancia_GS_3.4 <-
matrix(nrow = 2,
ncol = 5)
# Establezco la política que se aplica en la matriz
mat_importancia_GS_3.4[1,1] <- "Política 1"
mat_importancia_GS_3.4[2,1] <- "Política 2"
# Crecimiento de temperatura
## Política 1
for (i in 2:5){
mat_importancia_GS_3.4[1,i] <-
round(meta.model.growthS.P1_3.3$coeff[i],4)
}
## Política 2
for (i in 2:5){
mat_importancia_GS_3.4[2,i] <-
round(meta.model.growthS.P2_3.3$coeff[i],4)
}
kable(mat_importancia_GS_3.4,
align = "c",
col.names =
c("Políticas",
"Coeficiente `Beta.Delta.Temp.Z`",
"Coeficiente `Delta.S.Z`",
"Coeficiente `Gamma.re.Z`",
"Coeficiente `Eta.re.Z`"),
caption = "Tabla comparativa de los Coeficientes de Regresión del Meta-modelo que relaciona el Crecimiento Económico de la Región Emergente con las variables aleatorias estandarizadas `Beta.Delta.Temp`, `Delta.S`, `Gamma.re` y `Eta.re`")
# Matriz de respuestas promedio
mat_importancia_temp_3.4 <-
matrix(nrow = 2,
ncol = 5)
# Establezco la política que se aplica en la matriz
mat_importancia_temp_3.4[1,1] <- "Política 1"
mat_importancia_temp_3.4[2,1] <- "Política 2"
# Crecimiento de temperatura
## Política 1
for (i in 2:5){
mat_importancia_temp_3.4[1,i] <-
round(meta.model.temp.P1_3.1$coeff[i],4)
}
## Política 2
for (i in 2:5){
mat_importancia_temp_3.4[2,i] <-
round(meta.model.temp.P2_3.1$coeff[i],4)
}
kable(mat_importancia_temp_3.4,
align = "c",
col.names =
c("Políticas",
"Coeficiente `Beta.Delta.Temp.Z`",
"Coeficiente `Delta.S.Z`",
"Coeficiente `Gamma.re.Z`",
"Coeficiente `Eta.re.Z`"),
caption = "Tabla comparativa de los Coeficientes de Regresión del Meta-modelo que relaciona el Crecimiento de la Temperatura Promedio con las variables aleatorias estandarizadas `Beta.Delta.Temp`, `Delta.S`, `Gamma.re` y `Eta.re`")
# Matriz de respuestas promedio
mat_importancia_GN_3.4 <-
matrix(nrow = 2,
ncol = 5)
# Establezco la política que se aplica en la matriz
mat_importancia_GN_3.4[1,1] <- "Política 1"
mat_importancia_GN_3.4[2,1] <- "Política 2"
# Crecimiento de temperatura
## Política 1
for (i in 2:5){
mat_importancia_GN_3.4[1,i] <-
round(meta.model.growthN.P1_3.2$coeff[i],4)
}
## Política 2
for (i in 2:5){
mat_importancia_GN_3.4[2,i] <-
round(meta.model.growthN.P2_3.2$coeff[i],4)
}
kable(mat_importancia_GN_3.4,
align = "c",
col.names =
c("Políticas",
"Coeficiente `Beta.Delta.Temp.Z`",
"Coeficiente `Delta.S.Z`",
"Coeficiente `Gamma.re.Z`",
"Coeficiente `Eta.re.Z`"),
caption = "Tabla comparativa de los Coeficientes de Regresión del Meta-modelo que relaciona el Crecimiento Económico de la Región Avanzada con las variables aleatorias estandarizadas `Beta.Delta.Temp`, `Delta.S`, `Gamma.re` y `Eta.re`")
# Matriz de respuestas promedio
mat_importancia_GS_3.4 <-
matrix(nrow = 2,
ncol = 5)
# Establezco la política que se aplica en la matriz
mat_importancia_GS_3.4[1,1] <- "Política 1"
mat_importancia_GS_3.4[2,1] <- "Política 2"
# Crecimiento de temperatura
## Política 1
for (i in 2:5){
mat_importancia_GS_3.4[1,i] <-
round(meta.model.growthS.P1_3.3$coeff[i],4)
}
## Política 2
for (i in 2:5){
mat_importancia_GS_3.4[2,i] <-
round(meta.model.growthS.P2_3.3$coeff[i],4)
}
kable(mat_importancia_GS_3.4,
align = "c",
col.names =
c("Políticas",
"Coeficiente `Beta.Delta.Temp.Z`",
"Coeficiente `Delta.S.Z`",
"Coeficiente `Gamma.re.Z`",
"Coeficiente `Eta.re.Z`"),
caption = "Tabla comparativa de los Coeficientes de Regresión del Meta-modelo que relaciona el Crecimiento Económico de la Región Emergente con las variables aleatorias estandarizadas `Beta.Delta.Temp`, `Delta.S`, `Gamma.re` y `Eta.re`")
ggarrange(wireframe(Delta.Temp ~
Eta.re.seq * Gamma.re.seq,
data = Response.surface.P1_4.1,
xlab = "Innovation Propensity SETs", ylab = "R&D Returns SETs",
main = "Temperature Anomaly Policy P1",
drape = TRUE,
colorkey = TRUE,
screen = list(z = -60, x = -60)
),
wireframe(Delta.Temp ~
Eta.re.seq * Gamma.re.seq,
data = Response.surface.P2_4.2,
xlab = "Innovation Propensity SETs", ylab = "R&D Returns SETs",
main = "Temperature Anomaly Policy P2",
drape = TRUE,
colorkey = TRUE,
screen = list(z = -60, x = -60)
),
labels =
c("Inventory", "Workforce"),
ncol = 2, nrow = 1)
library(ggpubr)
ggarrange(wireframe(Delta.Temp ~
Eta.re.seq * Gamma.re.seq,
data = Response.surface.P1_4.1,
xlab = "Innovation Propensity SETs", ylab = "R&D Returns SETs",
main = "Temperature Anomaly Policy P1",
drape = TRUE,
colorkey = TRUE,
screen = list(z = -60, x = -60)
),
wireframe(Delta.Temp ~
Eta.re.seq * Gamma.re.seq,
data = Response.surface.P2_4.2,
xlab = "Innovation Propensity SETs", ylab = "R&D Returns SETs",
main = "Temperature Anomaly Policy P2",
drape = TRUE,
colorkey = TRUE,
screen = list(z = -60, x = -60)
),
labels =
c("Inventory", "Workforce"),
ncol = 2, nrow = 1)
#Define model parameters
params<-c(
CO2.Concentration.0 = 382.2461, #
TimeStep = as.numeric(5),#
EndTime = as.numeric(300), #
alfa = 0.33,
epsilon = 5.0, #elasticity of subsitution
Gamma.re = 0.25, #R&D returns SETs
k.re = as.numeric(0.0),#
Gamma.ce = 0.25, #R&D returns FETs
k.ce = as.numeric(0.0),#
Eta.re = 0.02, #Innovation propensity SETs
Eta.ce = 0.02, #Innovation propensity FETs
Nu.re = 0.02,  #Transferability SETs
Nu.ce = 0.02,  #Transferability FETs
qsi = as.numeric(0.0100539),#
Delta.S = 0.001822767,
Delta.Temp.Disaster = as.numeric(6.0),#
Beta.Delta.Temp = 5.0,
CO2.base = 289.415,
labor.growth_N = as.numeric(0),# Population growth Advanced Region
labor.growth_S = as.numeric(0),# Population growth Emerging Region
lambda.S = 0.1443,
sigma.utility = 2.0,
rho = 0.008, #Discount rate
Yre.0_N = 45.55,
Yce.0_N = 193.2,
Yre.0_S = 27.82,
Yce.0_S = 257.54,
size.factor = as.numeric(4.0),#
Run.ID = as.numeric(1.0)
)
#Focus on alternative policy P1
#create the lists for the response surface
Eta.re.seq <-
seq(0.00,0.15,length=100)
Gamma.re.seq <-
seq(-0.05,0.50,length=100)
Response.surface.P1_4.1 <-
expand.grid(list(Eta.re.seq = Eta.re.seq,
Gamma.re.seq = Gamma.re.seq))
Response.surface.P1_4.1$Delta.Temp <-
as.numeric(meta.model.temp.P1_3.1$coeff[1]) +   #Constant term
as.numeric(meta.model.temp.P1_3.1$coeff[2]) * as.numeric(params["Beta.Delta.Temp"]) +   #Climate Sensitivity
as.numeric(meta.model.temp.P1_3.1$coeff[3]) * as.numeric(params["Delta.S"]) +   #Carbon Sink Capacity
as.numeric(meta.model.temp.P1_3.1$coeff[4]) * Response.surface.P1_4.1$Gamma.re.seq + #R&D returns SETS
as.numeric(meta.model.temp.P1_3.1$coeff[5]) * Response.surface.P1_4.1$Eta.re.seq  #Innovation propensity SETs
#Now we are ready to plot the response surface
wireframe(Delta.Temp ~
Eta.re.seq * Gamma.re.seq,
data = Response.surface.P1_4.1,
xlab = "Innovation Propensity SETs", ylab = "R&D Returns SETs",
main = "Temperature Anomaly Policy P1",
drape = TRUE,
colorkey = TRUE,
screen = list(z = -60, x = -60)
)
#Focus on alternative policy P2
#create the lists for the response surface
Eta.re.seq <-
seq(0.00,0.15,length=100)
Gamma.re.seq <-
seq(-0.05,0.50,length=100)
Response.surface.P2_4.2 <-
expand.grid(list(Eta.re.seq = Eta.re.seq,
Gamma.re.seq = Gamma.re.seq))
Response.surface.P2_4.2$Delta.Temp <-
as.numeric(meta.model.temp.P2_3.1$coeff[1]) +   #Constant term
as.numeric(meta.model.temp.P2_3.1$coeff[2]) * as.numeric(params["Beta.Delta.Temp"]) +   #Climate Sensitivity
as.numeric(meta.model.temp.P2_3.1$coeff[3]) * as.numeric(params["Delta.S"]) +   #Carbon Sink Capacity
as.numeric(meta.model.temp.P2_3.1$coeff[4]) * Response.surface.P2_4.2$Gamma.re.seq + #R&D returns SETS
as.numeric(meta.model.temp.P2_3.1$coeff[5]) * Response.surface.P2_4.2$Eta.re.seq  #Innovation propensity SETs
#Now we are ready to plot the response surface
wireframe(Delta.Temp ~
Eta.re.seq * Gamma.re.seq,
data = Response.surface.P2_4.2,
xlab = "Innovation Propensity SETs", ylab = "R&D Returns SETs",
main = "Temperature Anomaly Policy P2",
drape = TRUE,
colorkey = TRUE,
screen = list(z = -60, x = -60)
)
ggarrange(wireframe(Delta.Temp ~
Eta.re.seq * Gamma.re.seq,
data = Response.surface.P1_4.1,
xlab = "Innovation Propensity SETs", ylab = "R&D Returns SETs",
main = "Temperature Anomaly Policy P1",
drape = TRUE,
colorkey = TRUE,
screen = list(z = -60, x = -60)
),
wireframe(Delta.Temp ~
Eta.re.seq * Gamma.re.seq,
data = Response.surface.P2_4.2,
xlab = "Innovation Propensity SETs", ylab = "R&D Returns SETs",
main = "Temperature Anomaly Policy P2",
drape = TRUE,
colorkey = TRUE,
screen = list(z = -60, x = -60)
),
labels =
c("Inventory", "Workforce"),
ncol = 2, nrow = 1)
ggarrange(wireframe(Delta.Temp ~
Eta.re.seq * Gamma.re.seq,
data = Response.surface.P1_4.1,
xlab = "Innovation Propensity SETs", ylab = "R&D Returns SETs",
main = "Temperature Anomaly Policy P1",
drape = TRUE,
colorkey = TRUE,
screen = list(z = -60, x = -60)
),
wireframe(Delta.Temp ~
Eta.re.seq * Gamma.re.seq,
data = Response.surface.P2_4.2,
xlab = "Innovation Propensity SETs", ylab = "R&D Returns SETs",
main = "Temperature Anomaly Policy P2",
drape = TRUE,
colorkey = TRUE,
screen = list(z = -60, x = -60)
),
ncol = 2, nrow = 1)
library(deSolve)
library(shiny)
library(ggplot2)
library(Rmisc)
library(scales)
library(extrafont)
library(data.table)
library(reshape2)
library(knitr)
library(tidyverse)
library(lattice)
library(ggpubr)
library(lhs)
# Especificar directorio donde se guardó el modelo.
dir.model <-
"C:/Users/Guillermo GC/Dropbox/TEC MTY MPE/7o Trimestre/Modelación Avanzada/EDIAM/"
# "C:/Users/GuillermoAlbertoGarc/Dropbox/TEC MTY MPE/7o Trimestre/Métodos para el análisis de decisiones bajo incertidumbre/EDIAM/"
# Especificar la versión del modelo que estamos utilizando
model.version <-
"ediam_9_14_2016.r"
# Cargar el modelo en la sesión
source(
paste(dir.model,
model.version,
sep="")
)
#Checar que el modelo se haya cargado correctamente.
ediam
# Especificar directorio donde se guardó el modelo.
dir.model <-
"C:/Users/Guillermo GC/Dropbox/TEC MTY MPE/7o Trimestre/Modelación Avanzada/EDIAM/"
# "C:/Users/GuillermoAlbertoGarc/Dropbox/TEC MTY MPE/7o Trimestre/Métodos para el análisis de decisiones bajo incertidumbre/EDIAM/"
# Especificar la versión del modelo que estamos utilizando
model.version <-
"ediam_9_14_2016.r"
# Cargar el modelo en la sesión
source(
paste(dir.model,
model.version,
sep="")
)
#Checar que el modelo se haya cargado correctamente.
ediam
