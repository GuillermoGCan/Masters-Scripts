agebs <- read_sf(dsn="./marcogeoestadistico2020/19_nuevoleon/conjunto_de_datos", layer="19a")
library("sf") # librería para cargar shapefiles
agebs <- read_sf(dsn="./marcogeoestadistico2020/19_nuevoleon/conjunto_de_datos", layer="19a")
library(tidyverse)
tabla <- read.csv("./agebs2021/agebs_2021.csv", encoding ="UTF -8", na.strings = "*",
stringsAsFactors = FALSE) #Lee la tabla de resultados
library(readr)
tabla <- read.csv("./agebs2021/agebs_2021.csv", encoding ="UTF -8", na.strings = "*",
stringsAsFactors = FALSE) #Lee la tabla de resultados
tabla <- read.csv("agebs_2021.csv", encoding ="UTF -8", na.strings = "*",
stringsAsFactors = FALSE) #Lee la tabla de resultados
library(dplyr)
library(tidyverse)
library(dplyr)
library(readr)
library(rgdal)
library(ggplot2)
library(qgraph)
library(FactoMineR)
library(factoextra)
library(corrplot)
library(sf) # librería para cargar shapefiles
agebs <- read_sf(dsn=".", layer="19a", stringsAsFactors = FALSE)
head(agebs) ## Lee el archivo cartográfico
tabla <- read.csv("agebs_2021.csv", encoding ="UTF -8", na.strings = "*",
stringsAsFactors = FALSE) #Lee la tabla de resultados
tabla$MUN <- ifelse(nchar(tabla$MUN)==1, paste("00", tabla$MUN, sep=""),
ifelse(nchar(tabla$MUN)==2, paste("0", tabla$MUN, sep=""),
tabla$MUN))
tabla$LOC <- ifelse(nchar(tabla$LOC)==1, paste("000", tabla$LOC, sep=""),
ifelse(nchar(tabla$LOC)==2, paste("00", tabla$LOC, sep=""),
ifelse(nchar(tabla$LOC)==3, paste("0", tabla$LOC, sep=""),
tabla$LOC)))
tabla$AGEB <- ifelse(nchar(tabla$AGEB)==1, paste("000", tabla$AGEB, sep=""),
ifelse(nchar(tabla$AGEB)==2, paste("00", tabla$AGEB, sep=""),
ifelse(nchar(tabla$AGEB)==3, paste("0", tabla$AGEB, sep=""),
tabla$AGEB)))
# Genera el campo CVEGEO
tabla$CVEGEO <- paste(tabla$ENTIDAD, tabla$MUN, tabla$LOC, tabla$AGEB, sep="")
head(tabla)
table(tabla$CVEGEO %in% agebs$CVEGEO)
table(agebs$CVEGEO %in% tabla$CVEGEO)
# Une los dos archivos. El objeto agebs_urbanas tiene la cartografia de agebs y todos los
# datos del censo del 2020.
agebs_urbanas <- merge(x=agebs, y=tabla, by="CVEGEO")
class(agebs_urbanas) # Revisa el tipo de objeto: sf es un objeto espacial con coordenadas
# Extrae la tabla a un data frame que no sea un objeto espacial
# Posiblemente tengas que instalar la librería dplyr.
df <- dplyr::select(as.data.frame(agebs_urbanas), -geometry)
sel_data <- df %>%
filter(POBTOT != 0) %>%
filter(NOM_MUN %in% c("Monterrey", "San Nicolás de los Garza", "San Pedro Garza García",
"Santa Catarina", "Guadalupe", "General Escobedo", "Apodaca",
"Juárez", "García", "Cadereyta Jiménez", "Pesquería", "El Carmen",
"General Zuazua", "Salinas Victoria", "Santiago")) %>%
mutate(PER_PSINDER = PSINDER/POBTOT, PER_POCUPADA = POCUPADA/POBTOT, PER_VPH_AUTOM = VPH_AUTOM/TVIVPARHAB,
PER_VPH_INTER = VPH_INTER/TVIVPARHAB, PER_VPH_SPMVPI = VPH_SPMVPI/TVIVPARHAB,
PER_VPH_CVJ = VPH_CVJ/TVIVPARHAB, PER_VPH_CEL = VPH_CEL/TVIVPARHAB) %>%
select(CVEGEO,GRAPROES, PRO_OCUP_C,PER_PSINDER, PER_VPH_AUTOM,
PER_VPH_INTER, PER_VPH_SPMVPI, PER_VPH_CVJ, PER_VPH_CEL) %>%
na.exclude()
# Matriz de correlaciones
cor(sel_data[2:ncol(sel_data)],)
qgraph(cor(sel_data[2:ncol(sel_data)],))
# Calcular el PCA
ir.pca <- prcomp(sel_data[2:ncol(sel_data)], center= TRUE, scale = TRUE)
print(ir.pca)
summary(ir.pca)
plot(ir.pca, type="l") #plot de explicación de la varianza por PCA
d <- as.data.frame(predict(ir.pca, sel_data[]))
head(d)
dim(d)
# Exploremos los resultados por componente
var <- get_pca_var(ir.pca)
corrplot(var$cos2, is.corr=FALSE)
# llevo mi índice a las agebs
sel_data$PC1 <- d$PC1
View(var)
# Transformar a espacial
agebs_urbanas_2 <- merge(x=agebs, y=sel_data, by="CVEGEO")
agebs_urbanas_3 <- st_transform(agebs_urbanas_2, 4326)
class(agebs_urbanas_3)
mi.paleta <- colorNumeric( palette= "YlGnBu", domain=zmm_complete$PC1,
na.color="transparent" )
mi.paleta <- colorNumeric( palette= "YlGnBu", domain=sel_data$PC1,
na.color="transparent" )
library(tidyverse)
library(dplyr)
library(readr)
library(rgdal)
library(ggplot2)
library(qgraph)
library(FactoMineR)
library(factoextra)
library(corrplot)
library(sf) # librería para cargar shapefiles
mi.paleta <- colorNumeric( palette= "YlGnBu", domain=sel_data$PC1,
na.color="transparent" )
library(htmlwidgets)
library(htmltools)
library(leaflet)
mi.paleta <- colorNumeric( palette= "YlGnBu", domain=sel_data$PC1,
na.color="transparent" )
View(mi.paleta)
# Exploración de variable a plotear
plot(density(agebs_urbanas_3@data$PC1))
View(agebs_urbanas_3)
# Exploración de variable a plotear
plot(density(agebs_urbanas_3$PC1))
choroLayer(x=agebs_urbanas_3, var="PC1")
library(cartography)
choroLayer(x=agebs_urbanas_3, var="PC1")
plot(density(agebs_urbanas_3$PC1))
quantile(agebs_urbanas_3$PC1)
mapa_lf <- leaflet(agebs_urbanas_3) %>%
addTiles() %>%
setView(lat=25.6707731, lng=-100.309228, zoom=12) %>%
addPolygons(
stroke=TRUE,
weight=0.3,
fillOpacity=0.60,
fillColor = ~colorQuantile("YlGnBu", PC1)(PC1)
) %>%
addProviderTiles("Stamen.Toner", options=providerTileOptions(opacity=1))
mapa_lf
# un mapa con tooltips
etiquetasMTY <- paste(
"AGEB: ", agebs_urbanas_3$CVEGEO, "<br/>",
"Indicador Nivel Socioeconómico: ", round(agebs_urbanas_3$PC1,2),
sep="") %>%
lapply(htmltools::HTML) # Hay que instalar la librer?a de htmltools
mapa_lf2 <- leaflet(agebs_urbanas_3) %>%
addTiles() %>%
setView(lat=25.6707731, lng=-100.309228, zoom=12) %>%
addPolygons(
stroke=TRUE,
weight=0.3,
fillOpacity=0.65,
label=etiquetasMTY,
labelOptions = labelOptions(
style=list("font-weight"="normal", padding="4px px"),
textsize="11px",
direction="auto"
),
fillColor = ~mi.paleta(PC1)
) %>%
addProviderTiles("Stamen.Toner", options=providerTileOptions(opacity=1)) %>%
addLegend(
pal=mi.paleta, values=~PC1, opacity=0.65,
title="Indicador Socioeconomico",
position="bottomleft",
labFormat = function(type, cuts, p){
paste0(c("Bajo", "Medio", "Alto", "Muy Alto"))
}
)
mapa_lf2
htmlwidgets::saveWidget(mapa_lf2, file="mapaTarea2-1.html")
# un mapa con tooltips
etiquetasMTY <- paste(
"AGEB: ", agebs_urbanas_3$CVEGEO, "<br/>",
"Indicador Nivel Socioeconomico: ", round(agebs_urbanas_3$PC1,2),
sep="") %>%
lapply(htmltools::HTML) # Hay que instalar la librer?a de htmltools
mapa_lf2 <- leaflet(agebs_urbanas_3) %>%
addTiles() %>%
setView(lat=25.6707731, lng=-100.309228, zoom=12) %>%
addPolygons(
stroke=TRUE,
weight=0.3,
fillOpacity=0.65,
label=etiquetasMTY,
labelOptions = labelOptions(
style=list("font-weight"="normal", padding="4px px"),
textsize="11px",
direction="auto"
),
fillColor = ~mi.paleta(PC1)
) %>%
addProviderTiles("Stamen.Toner", options=providerTileOptions(opacity=1)) %>%
addLegend(
pal=mi.paleta, values=~PC1, opacity=0.65,
title="Indicador Socioeconomico",
position="bottomleft",
labFormat = function(type, cuts, p){
paste0(c("Bajo", "Medio", "Alto", "Muy Alto"))
}
)
mapa_lf2
htmlwidgets::saveWidget(mapa_lf2, file="mapaTarea2-1.html")
View(sel_data)
View(sel_data)
View(ir.pca)
View(tabla)
print(ir.pca)
summary(ir.pca)
plot(ir.pca, type="l") #plot de explicación de la varianza por PCA
View(d)
corrplot(var$cos2, is.corr=FALSE)
View(var)
mapa_lf2 <- leaflet(agebs_urbanas_3) %>%
addTiles() %>%
setView(lat=25.6707731, lng=-100.309228, zoom=12) %>%
addPolygons(
stroke=TRUE,
weight=0.3,
fillOpacity=0.65,
label=etiquetasMTY,
labelOptions = labelOptions(
style=list("font-weight"="normal", padding="4px px"),
textsize="11px",
direction="auto"
),
fillColor = ~mi.paleta(PC1)
) %>%
addProviderTiles("Stamen.Toner", options=providerTileOptions(opacity=1)) %>%
addLegend(
pal=mi.paleta, values=~PC1, opacity=0.65,
title="Indicador Socioeconomico",
position="bottomleft",
labFormat = function(type, cuts, p){
paste0(c("Muy Alto", "Alto", "Medio", "Bajo"))
}
)
mapa_lf2
htmlwidgets::saveWidget(mapa_lf2, file="mapaTarea2-1.html")
htmlwidgets::saveWidget(mapa_lf2, file="mapaTarea2-1.html")
plot(density(agebs_urbanas_3$PC1))
summary(agebs_urbanas_3$PC1)
d$PC1
max(d$PC1)
min(d$PC1)
# llevo mi índice a las agebs
sel_data$PC1 <- d$PC1*-1/min(d$PC1)
View(sel_data)
# llevo mi índice a las agebs
sel_data$PC1 <- d$PC1
View(sel_data)
summary(d$PC1)
summary(d$PC1*-1+50)
summary(d$PC1*-1)
summary(d$PC1/-6.0660)
summary(d$PC1/-10.6036)
# llevo mi índice a las agebs
sel_data$PC1 <- d$PC1/min(d$PC1)
View(sel_data)
# llevo mi índice a las agebs
sel_data$PC1 <- d$PC1/-max(d$PC1)
View(sel_data)
# Transformar a espacial
agebs_urbanas_2 <- merge(x=agebs, y=sel_data, by="CVEGEO")
agebs_urbanas_3 <- st_transform(agebs_urbanas_2, 4326)
class(agebs_urbanas_3)
mi.paleta <- colorNumeric( palette= "YlGnBu", domain=sel_data$PC1,
na.color="transparent" )
##Mapa 1
plot(density(agebs_urbanas_3$PC1))
quantile(agebs_urbanas_3$PC1)
mapa_lf <- leaflet(agebs_urbanas_3) %>%
addTiles() %>%
setView(lat=25.6707731, lng=-100.309228, zoom=12) %>%
addPolygons(
stroke=TRUE,
weight=0.3,
fillOpacity=0.60,
fillColor = ~colorQuantile("YlGnBu", PC1)(PC1)
) %>%
addProviderTiles("Stamen.Toner", options=providerTileOptions(opacity=1))
mapa_lf
# un mapa con tooltips
etiquetasMTY <- paste(
"AGEB: ", agebs_urbanas_3$CVEGEO, "<br/>",
"Indicador Nivel Socioeconomico: ", round(agebs_urbanas_3$PC1,2),
sep="") %>%
lapply(htmltools::HTML) # Hay que instalar la librer?a de htmltools
mapa_lf2 <- leaflet(agebs_urbanas_3) %>%
addTiles() %>%
setView(lat=25.6707731, lng=-100.309228, zoom=12) %>%
addPolygons(
stroke=TRUE,
weight=0.3,
fillOpacity=0.65,
label=etiquetasMTY,
labelOptions = labelOptions(
style=list("font-weight"="normal", padding="4px px"),
textsize="11px",
direction="auto"
),
fillColor = ~mi.paleta(PC1)
) %>%
addProviderTiles("Stamen.Toner", options=providerTileOptions(opacity=1)) %>%
addLegend(
pal=mi.paleta, values=~PC1, opacity=0.65,
title="Indicador Socioeconomico",
position="bottomleft",
labFormat = function(type, cuts, p){
paste0(c("Muy Alto", "Alto", "Medio", "Bajo"))
}
)
mapa_lf2
htmlwidgets::saveWidget(mapa_lf2, file="mapaTarea2-1.html")
library(tidyverse)
library(dplyr)
library(readr)
library(rgdal)
library(ggplot2)
library(qgraph)
library(FactoMineR)
library(factoextra)
library(corrplot)
library(htmlwidgets)
library(htmltools)
library(leaflet)
library(sf) # librería para cargar shapefiles
library(cartography)
agebs_urbanas_2 <- merge(x=agebs, y=sel_data, by="CVEGEO")
agebs_urbanas_3 <- st_transform(agebs_urbanas_2, 4326)
class(agebs_urbanas_3)
mi.paleta <- colorNumeric( palette= "YlGnBu", domain=sel_data$PC1,
na.color="transparent" )
##Mapa 1
plot(density(agebs_urbanas_3$PC1))
quantile(agebs_urbanas_3$PC1)
mapa_lf <- leaflet(agebs_urbanas_3) %>%
addTiles() %>%
setView(lat=25.6707731, lng=-100.309228, zoom=12) %>%
addPolygons(
stroke=TRUE,
weight=0.3,
fillOpacity=0.60,
fillColor = ~colorQuantile("YlGnBu", PC1)(PC1)
) %>%
addProviderTiles("Stamen.Toner", options=providerTileOptions(opacity=1))
mapa_lf
# un mapa con tooltips
etiquetasMTY <- paste(
"AGEB: ", agebs_urbanas_3$CVEGEO, "<br/>",
"Indicador Nivel Socioeconomico: ", round(agebs_urbanas_3$PC1,2),
sep="") %>%
lapply(htmltools::HTML) # Hay que instalar la librer?a de htmltools
mapa_lf2 <- leaflet(agebs_urbanas_3) %>%
addTiles() %>%
setView(lat=25.6707731, lng=-100.309228, zoom=12) %>%
addPolygons(
stroke=TRUE,
weight=0.3,
fillOpacity=0.65,
label=etiquetasMTY,
labelOptions = labelOptions(
style=list("font-weight"="normal", padding="4px px"),
textsize="11px",
direction="auto"
),
fillColor = ~mi.paleta(PC1)
) %>%
addProviderTiles("Stamen.Toner", options=providerTileOptions(opacity=1)) %>%
addLegend(
pal=mi.paleta, values=~PC1, opacity=0.65,
title="Indicador Socioeconomico",
position="bottomleft",
labFormat = function(type, cuts, p){
paste0(c("Muy Alto", "Alto", "Medio", "Bajo"))
}
)
mapa_lf2
htmlwidgets::saveWidget(mapa_lf2, file="mapaTarea2-1.html")
# Transformar a espacial
agebs_urbanas_2 <- merge(x=agebs, y=sel_data, by="CVEGEO")
agebs_urbanas_3 <- st_transform(agebs_urbanas_2, 4326)
class(agebs_urbanas_3)
mi.paleta <- colorNumeric( palette= "YlGnBu", domain=sel_data$PC1,
na.color="transparent" )
##Mapa 1
plot(density(agebs_urbanas_3$PC1))
quantile(agebs_urbanas_3$PC1)
mapa_lf <- leaflet(agebs_urbanas_3) %>%
addTiles() %>%
setView(lat=25.6707731, lng=-100.309228, zoom=12) %>%
addPolygons(
stroke=TRUE,
weight=0.3,
fillOpacity=0.60,
fillColor = ~colorQuantile("YlGnBu", PC1)(PC1)
) %>%
addProviderTiles("Stamen.Toner", options=providerTileOptions(opacity=1))
mapa_lf
# un mapa con tooltips
etiquetasMTY <- paste(
"AGEB: ", agebs_urbanas_3$CVEGEO, "<br/>",
"Indicador Nivel Socioeconomico: ", round(agebs_urbanas_3$PC1,2),
sep="") %>%
lapply(htmltools::HTML) # Hay que instalar la librer?a de htmltools
mapa_lf2 <- leaflet(agebs_urbanas_3) %>%
addTiles() %>%
setView(lat=25.6707731, lng=-100.309228, zoom=12) %>%
addPolygons(
stroke=TRUE,
weight=0.3,
fillOpacity=0.65,
label=etiquetasMTY,
labelOptions = labelOptions(
style=list("font-weight"="normal", padding="4px px"),
textsize="11px",
direction="auto"
),
fillColor = ~mi.paleta(PC1)
) %>%
addProviderTiles("Stamen.Toner", options=providerTileOptions(opacity=1)) %>%
addLegend(
pal=mi.paleta, values=~PC1, opacity=0.65,
title="Indicador Socioeconomico",
position="bottomleft",
labFormat = function(type, cuts, p){
paste0(c("Bajo", "Medio", "Alto", "Muy Alto"))
}
)
mapa_lf2
htmlwidgets::saveWidget(mapa_lf2, file="mapaTarea2-1.html")
sel_data$PC1 <- 100*d$PC1/-max(d$PC1)
# Transformar a espacial
agebs_urbanas_2 <- merge(x=agebs, y=sel_data, by="CVEGEO")
agebs_urbanas_3 <- st_transform(agebs_urbanas_2, 4326)
class(agebs_urbanas_3)
mi.paleta <- colorNumeric( palette= "YlGnBu", domain=sel_data$PC1,
na.color="transparent" )
##Mapa 1
plot(density(agebs_urbanas_3$PC1))
quantile(agebs_urbanas_3$PC1)
mapa_lf <- leaflet(agebs_urbanas_3) %>%
addTiles() %>%
setView(lat=25.6707731, lng=-100.309228, zoom=12) %>%
addPolygons(
stroke=TRUE,
weight=0.3,
fillOpacity=0.60,
fillColor = ~colorQuantile("YlGnBu", PC1)(PC1)
) %>%
addProviderTiles("Stamen.Toner", options=providerTileOptions(opacity=1))
mapa_lf
# un mapa con tooltips
etiquetasMTY <- paste(
"AGEB: ", agebs_urbanas_3$CVEGEO, "<br/>",
"Indicador Nivel Socioeconomico: ", round(agebs_urbanas_3$PC1,2),
sep="") %>%
lapply(htmltools::HTML) # Hay que instalar la librer?a de htmltools
mapa_lf2 <- leaflet(agebs_urbanas_3) %>%
addTiles() %>%
setView(lat=25.6707731, lng=-100.309228, zoom=12) %>%
addPolygons(
stroke=TRUE,
weight=0.3,
fillOpacity=0.65,
label=etiquetasMTY,
labelOptions = labelOptions(
style=list("font-weight"="normal", padding="4px px"),
textsize="11px",
direction="auto"
),
fillColor = ~mi.paleta(PC1)
) %>%
addProviderTiles("Stamen.Toner", options=providerTileOptions(opacity=1)) %>%
addLegend(
pal=mi.paleta, values=~PC1, opacity=0.65,
title="Indicador Socioeconomico",
position="bottomleft",
labFormat = function(type, cuts, p){
paste0(c("Bajo", "Medio", "Alto", "Muy Alto"))
}
)
mapa_lf2
htmlwidgets::saveWidget(mapa_lf2, file="mapaTarea2-1.html")
summary(sel_data$PC1)
