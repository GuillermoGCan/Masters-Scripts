production.capacity.cII *
production.rate.cII
surplus.cI <-
supply.cI -
demand.for.products.cI
surplus.cII <-
supply.cII -
demand.for.products.cII
progress.function.cI <-
ifelse(t <= 10/12,
2,
progress.factor.cI)
progress.function.cII <-
ifelse(t <= 10/12,
2,
progress.factor.cII)
investment.in.progress.cI <-
ifelse(surplus.cI<0,
investment.rate.cI *
production.capacity.cI *
investment.function.cI,
0) *
progress.function.cI
investment.in.progress.cII <-
ifelse(surplus.cII<0,
investment.rate.cII *
production.capacity.cII *
investment.function.cII,
0) *
progress.function.cII
#flow variables
investments.cI <- ifelse(surplus.cI<0,
investment.rate.cI *
production.capacity.cI *
investment.function.cI,
0) #[%/year]
investments.cII <- ifelse(surplus.cII<0,
investment.rate.cII *
production.capacity.cII *
investment.function.cII,
0) #[%/year]
depreciation.cI <-
depreciation.rate.cI *
production.capacity.cI #[%/year]
depreciation.cII <-
depreciation.rate.cII *
production.capacity.cII #[%/year]
progress.cI <-
standards.of.cI *
investment.in.progress.cI *
(1 - (price.of.cI.products.in.cI)/reference.price.cI) #[]
progress.cII <-
standards.of.cII *
investment.in.progress.cII *
(1 - (price.of.cII.products.in.cII)/reference.price.cII) #[]
deterioration.cI <-
standards.of.cI *
deterioration.rate.cI #[]
deterioration.cII <-
standards.of.cII *
deterioration.rate.cII #[]
#state variables
dproduction.capacity.cI <-
investments.cI -
depreciation.cI #[%/year]
dstandards.of.cI <-
progress.cI -
deterioration.cI #[%/year]
dproduction.capacity.cII <-
investments.cII -
depreciation.cII #[%/year]
dstandards.of.cII <-
progress.cII -
deterioration.cII #[%/year]
list(c(dproduction.capacity.cI,
dstandards.of.cI,
dproduction.capacity.cII,
dstandards.of.cII)
)
})
}
out <- ode(y = InitialConditions,
times = times,
func = Globalizacion.y.Liberalizacion,
parms = parameters,
method =intg.method)
#Graficas de todo
plot(out)
#Problema 1
#Globalización y liberalización
#Paso 1: cargar la libreria "deSolve" empleando la funcion library()
library("deSolve")
#Especificamos modelo
Globalizacion.y.Liberalizacion <- function(t, state, parameters) {
with(as.list(c(state,parameters)), {
#auxiliary variables
subsidy.cI <-
ifelse(t >= 10,
0,
0.75)
subsidy.cII <-
ifelse(t >= 10,
0,
0.75)
customs.duties.raised.by.cI <-
ifelse(t >= 10,
0,
0.5)
customs.duties.raised.by.cII <-
ifelse(t >= 10,
0,
0.5)
investment.function.cI <-
ifelse(t >= 10,
investment.factor.cI,
2) #[]
investment.function.cII <-
ifelse(t >= 10,
investment.factor.cII,
2) #[]
production.costs.cI <-
standards.of.cI *
standard.factor.cI
production.costs.cII <-
standards.of.cII *
standard.factor.cII
product.costs.cI <-
resource.costs.cI +
production.costs.cI
product.costs.cII <-
resource.costs.cII +
production.costs.cII
product.price.cI <-
product.costs.cI *
(1 + tax.rate.cI)
product.price.cII <-
product.costs.cII *
(1 + tax.rate.cII)
price.of.cI.products.in.cI <- product.price.cI
price.of.cII.products.in.cI <-
product.price.cII *
(1-subsidy.cII + customs.duties.raised.by.cI)
price.of.cII.products.in.cII <- product.price.cII
price.of.cI.products.in.cII <-
product.price.cI *
(1-subsidy.cI + customs.duties.raised.by.cII)
price.ratio.of.domestic.versus.imported.products.in.cI <-
price.of.cI.products.in.cI /
price.of.cII.products.in.cI
price.ratio.of.domestic.versus.imported.products.in.cII <-
price.of.cII.products.in.cII /
price.of.cI.products.in.cII
percentage.purchased.by.cI.from.cI <-
ifelse(price.ratio.of.domestic.versus.imported.products.in.cI <= 0.5, 1,
ifelse(price.ratio.of.domestic.versus.imported.products.in.cI > 0.5 &
price.ratio.of.domestic.versus.imported.products.in.cI < 1.5, 0.5,
ifelse(price.ratio.of.domestic.versus.imported.products.in.cI >= 1.5, 0)))
percentage.purchased.by.cII.from.cII <-
ifelse(price.ratio.of.domestic.versus.imported.products.in.cII <= 0.5, 1,
ifelse(price.ratio.of.domestic.versus.imported.products.in.cII > 0.5 &
price.ratio.of.domestic.versus.imported.products.in.cII < 1.5, 0.5,
ifelse(price.ratio.of.domestic.versus.imported.products.in.cII >= 1.5, 0)))
demand.for.products.cI <-
percentage.purchased.by.cI.from.cI *
market.volume.cI +
market.volume.cII *
(1-percentage.purchased.by.cII.from.cII)
demand.for.products.cII <-
percentage.purchased.by.cII.from.cII *
market.volume.cI +
market.volume.cII *
(1-percentage.purchased.by.cI.from.cI)
supply.cI <-
production.capacity.cI *
production.rate.cI
supply.cII <-
production.capacity.cII *
production.rate.cII
surplus.cI <-
supply.cI -
demand.for.products.cI
surplus.cII <-
supply.cII -
demand.for.products.cII
progress.function.cI <-
ifelse(t <= 10/12,
2,
progress.factor.cI)
progress.function.cII <-
ifelse(t <= 10/12,
2,
progress.factor.cII)
investment.in.progress.cI <-
ifelse(surplus.cI<0,
investment.rate.cI *
production.capacity.cI *
investment.function.cI,
0) *
progress.function.cI
investment.in.progress.cII <-
ifelse(surplus.cII<0,
investment.rate.cII *
production.capacity.cII *
investment.function.cII,
0) *
progress.function.cII
#flow variables
investments.cI <- ifelse(surplus.cI<0,
investment.rate.cI *
production.capacity.cI *
investment.function.cI,
0) #[%/year]
investments.cII <- ifelse(surplus.cII<0,
investment.rate.cII *
production.capacity.cII *
investment.function.cII,
0) #[%/year]
depreciation.cI <-
depreciation.rate.cI *
production.capacity.cI #[%/year]
depreciation.cII <-
depreciation.rate.cII *
production.capacity.cII #[%/year]
progress.cI <-
standards.of.cI *
investment.in.progress.cI *
(1 - (price.of.cI.products.in.cI)/reference.price.cI) #[]
progress.cII <-
standards.of.cII *
investment.in.progress.cII *
(1 - (price.of.cII.products.in.cII)/reference.price.cII) #[]
deterioration.cI <-
standards.of.cI *
deterioration.rate.cI #[]
deterioration.cII <-
standards.of.cII *
deterioration.rate.cII #[]
#state variables
dproduction.capacity.cI <-
investments.cI -
depreciation.cI #[%/year]
dstandards.of.cI <-
progress.cI -
deterioration.cI #[%/year]
dproduction.capacity.cII <-
investments.cII -
depreciation.cII #[%/year]
dstandards.of.cII <-
progress.cII -
deterioration.cII #[%/year]
list(c(dproduction.capacity.cI,
dstandards.of.cI,
dproduction.capacity.cII,
dstandards.of.cII)
)
})
}
#Considera a los parametros como variables exogenas que no pueden ser modificadas
parameters<-c(depreciation.rate.cI = 5/100, #[%/year]
investment.rate.cI = 10/100, #[%/year]
investment.factor.cI = 2, #[dimensionless]
production.rate.cI = 100/100,  #[]
market.volume.cI = 100/100, #[]
market.volume.cII = 100/100, #[]
tax.rate.cI = 20/100, #[%]
resource.costs.cI = 100/100, #[%]
standard.factor.cI = 100/100, #[%]
deterioration.rate.cI = 5/100, #[%]
reference.price.cI = 5,
progress.factor.cI = 2,
depreciation.rate.cII = 5/100, #[%/year]
investment.rate.cII = 10/100, #[%/year]
investment.factor.cII = 2, #[dimensionless]
production.rate.cII = 100/100,  #[]
tax.rate.cII = 20/100, #[%]
resource.costs.cII = 100/100, #[%]
standard.factor.cII = 100/100, #[%]
deterioration.rate.cII = 5/100, #[%]
reference.price.cII = 5,
progress.factor.cII = 2
)
#para definir tus condiciones iniciales utiiza tus variables de estado
InitialConditions <- c(production.capacity.cI = 100/100, #[%]
standards.of.cI = 100/100, #[%]
production.capacity.cII = 100/100, #[%]
standards.of.cII = 100/100
)
times <- seq(0, #tiempo inicial
50, #tiempo final #[years]
0.1 )#número de repetición de puntos #[years]
# Definimos método de integración
intg.method<-c("rk4")
out <- ode(y = InitialConditions,
times = times,
func = Globalizacion.y.Liberalizacion,
parms = parameters,
method =intg.method)
tail(out)
#Graficas de todo
plot(out)
#Problema 1
#Globalización y liberalización
#Paso 1: cargar la libreria "deSolve" empleando la funcion library()
library("deSolve")
#Considera a los parametros como variables exogenas que no pueden ser modificadas
parameters<-c(depreciation.rate.cI = 5/100, #[%/year]
investment.rate.cI = 10/100, #[%/year]
investment.factor.cI = 2, #[dimensionless]
production.rate.cI = 100/100,  #[]
market.volume.cI = 100/100, #[]
market.volume.cII = 100/100, #[]
tax.rate.cI = 20/100, #[%]
resource.costs.cI = 100/100, #[%]
standard.factor.cI = 100/100, #[%]
deterioration.rate.cI = 5/100, #[%]
reference.price.cI = 5,
progress.factor.cI = 2,
depreciation.rate.cII = 5/100, #[%/year]
investment.rate.cII = 10/100, #[%/year]
investment.factor.cII = 2, #[dimensionless]
production.rate.cII = 100/100,  #[]
tax.rate.cII = 20/100, #[%]
resource.costs.cII = 100/100, #[%]
standard.factor.cII = 100/100, #[%]
deterioration.rate.cII = 5/100, #[%]
reference.price.cII = 5,
progress.factor.cII = 2
)
#para definir tus condiciones iniciales utiiza tus variables de estado
InitialConditions <- c(production.capacity.cI = 100/100, #[%]
standards.of.cI = 100/100, #[%]
production.capacity.cII = 100/100, #[%]
standards.of.cII = 100/100
)
times <- seq(0, #tiempo inicial
50, #tiempo final #[years]
0.05 )#número de repetición de puntos #[years]
# Definimos método de integración
intg.method<-c("rk4")
#Especificamos modelo
Globalizacion.y.Liberalizacion <- function(t, state, parameters) {
with(as.list(c(state,parameters)), {
#auxiliary variables
subsidy.cI <-
ifelse(t >= 10,
0,
0.75)
subsidy.cII <-
ifelse(t >= 10,
0,
0.75)
customs.duties.raised.by.cI <-
ifelse(t >= 10,
0,
0.5)
customs.duties.raised.by.cII <-
ifelse(t >= 10,
0,
0.5)
investment.function.cI <-
ifelse(t >= 10,
investment.factor.cI,
2) #[]
investment.function.cII <-
ifelse(t >= 10,
investment.factor.cII,
2) #[]
production.costs.cI <-
standards.of.cI *
standard.factor.cI
production.costs.cII <-
standards.of.cII *
standard.factor.cII
product.costs.cI <-
resource.costs.cI +
production.costs.cI
product.costs.cII <-
resource.costs.cII +
production.costs.cII
product.price.cI <-
product.costs.cI *
(1 + tax.rate.cI)
product.price.cII <-
product.costs.cII *
(1 + tax.rate.cII)
price.of.cI.products.in.cI <- product.price.cI
price.of.cII.products.in.cI <-
product.price.cII *
(1-subsidy.cII + customs.duties.raised.by.cI)
price.of.cII.products.in.cII <- product.price.cII
price.of.cI.products.in.cII <-
product.price.cI *
(1-subsidy.cI + customs.duties.raised.by.cII)
price.ratio.of.domestic.versus.imported.products.in.cI <-
price.of.cI.products.in.cI /
price.of.cII.products.in.cI
price.ratio.of.domestic.versus.imported.products.in.cII <-
price.of.cII.products.in.cII /
price.of.cI.products.in.cII
percentage.purchased.by.cI.from.cI <-
ifelse(price.ratio.of.domestic.versus.imported.products.in.cI <= 0.5, 1,
ifelse(price.ratio.of.domestic.versus.imported.products.in.cI > 0.5 &
price.ratio.of.domestic.versus.imported.products.in.cI < 1.5, 0.5,
ifelse(price.ratio.of.domestic.versus.imported.products.in.cI >= 1.5, 0)))
percentage.purchased.by.cII.from.cII <-
ifelse(price.ratio.of.domestic.versus.imported.products.in.cII <= 0.5, 1,
ifelse(price.ratio.of.domestic.versus.imported.products.in.cII > 0.5 &
price.ratio.of.domestic.versus.imported.products.in.cII < 1.5, 0.5,
ifelse(price.ratio.of.domestic.versus.imported.products.in.cII >= 1.5, 0)))
demand.for.products.cI <-
percentage.purchased.by.cI.from.cI *
market.volume.cI +
market.volume.cII *
(1-percentage.purchased.by.cII.from.cII)
demand.for.products.cII <-
percentage.purchased.by.cII.from.cII *
market.volume.cI +
market.volume.cII *
(1-percentage.purchased.by.cI.from.cI)
supply.cI <-
production.capacity.cI *
production.rate.cI
supply.cII <-
production.capacity.cII *
production.rate.cII
surplus.cI <-
supply.cI -
demand.for.products.cI
surplus.cII <-
supply.cII -
demand.for.products.cII
progress.function.cI <-
ifelse(t <= 10/12,
2,
progress.factor.cI)
progress.function.cII <-
ifelse(t <= 10/12,
2,
progress.factor.cII)
investment.in.progress.cI <-
ifelse(surplus.cI<0,
investment.rate.cI *
production.capacity.cI *
investment.function.cI,
0) *
progress.function.cI
investment.in.progress.cII <-
ifelse(surplus.cII<0,
investment.rate.cII *
production.capacity.cII *
investment.function.cII,
0) *
progress.function.cII
#flow variables
investments.cI <- ifelse(surplus.cI<0,
investment.rate.cI *
production.capacity.cI *
investment.function.cI,
0) #[%/year]
investments.cII <- ifelse(surplus.cII<0,
investment.rate.cII *
production.capacity.cII *
investment.function.cII,
0) #[%/year]
depreciation.cI <-
depreciation.rate.cI *
production.capacity.cI #[%/year]
depreciation.cII <-
depreciation.rate.cII *
production.capacity.cII #[%/year]
progress.cI <-
standards.of.cI *
investment.in.progress.cI *
(1 - (price.of.cI.products.in.cI)/reference.price.cI) #[]
progress.cII <-
standards.of.cII *
investment.in.progress.cII *
(1 - (price.of.cII.products.in.cII)/reference.price.cII) #[]
deterioration.cI <-
standards.of.cI *
deterioration.rate.cI #[]
deterioration.cII <-
standards.of.cII *
deterioration.rate.cII #[]
#state variables
dproduction.capacity.cI <-
investments.cI -
depreciation.cI #[%/year]
dstandards.of.cI <-
progress.cI -
deterioration.cI #[%/year]
dproduction.capacity.cII <-
investments.cII -
depreciation.cII #[%/year]
dstandards.of.cII <-
progress.cII -
deterioration.cII #[%/year]
list(c(dproduction.capacity.cI,
dstandards.of.cI,
dproduction.capacity.cII,
dstandards.of.cII)
)
})
}
out <- ode(y = InitialConditions,
times = times,
func = Globalizacion.y.Liberalizacion,
parms = parameters,
method =intg.method)
tail(out)
#Graficas de todo
plot(out)
